{
Color: {
	brown: {
		hex: 623530ff
	}
	darkBrown: {
		hex: 351428ff
	}
	lightBrown: {
		hex: e5ae78ff
	}
	void: {
		hex: 00000000
	}
	white: {
		hex: ffffffff
	}
}
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: {
	Pixel: {
		font: PublicPixel.ttf
		size: 8
		mono: false
		color: white
		gamma: 1.8
		renderCount: 2
		borderWidth: 0
		borderStraight: false
		borderGamma: 1.8
		shadowOffsetX: 0
		shadowOffsetY: 0
		spaceX: 0
		spaceY: 0
		kerning: true
		flip: false
		genMipMaps: false
		incremental: false
		hinting: AutoMedium
		minFilter: Nearest
		magFilter: Nearest
		characters: "�!\"#$%&'()*+-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|ˆˇː˘˙˚˛˜˝΄΅Ά·ΈΉΊΌΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώЀЁЂЃЄЅІЇЈЉЊЋЌЍЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюяѐёђѓєѕіїјљњћќѝўџҐґҒғҖҗҘҙҚқҠҡҢңҪҫҮүҰұҲҳҺһӐӑӖӗӘәӨөӲӳ׀׃׆אבגדהוזחטיךכלםמןנסעףפץצקרשתװױײ׳״ḂḃḊḋḌḍḐḑḞḟḤḥḦḧḨḩḰḱḶḷḺḻḾḿṀṁṄṅṈṉṔṕṖṗṚṛṠṡṢṣṪṫṬṭṼṽẀẁẂẃẄẅẐẑẒẓẞẠạẸẹẼẽỈỉỊịỌọỚớỜờỠỡỤụỦủỨứỪừỮữỲỳỴỵỶỷỸỹὴὸῆῶ‒–—―‖‗‘’‚‛“”„‟†‡•…‰′″‹›‼‾⁄₠₢₣₤₨₪₫€₭₵₸₺₼₽₾₿℅ℓ№℗™Ω℮⅍ⅎ⅓⅔⅛⅜⅝⅞ↄ←↑→↓↔↕↨∂∆∏∑−∕∙√∞∟∠∩∫≈≡≤≥⌐█░▒■□●◦☡☮☺☻☼⟨⟩《》Ꞌꞌﬁﬂ"
	}
}
TintedDrawable: {
	healthBack: {
		name: white-pixel
		color: darkBrown
	}
	healthFront: {
		name: white-pixel
		color: brown
	}
	void: {
		name: white-pixel
		color: void
	}
}
com.ray3k.tenpatch.TenPatchDrawable: {
	LoadingBar-T: {
		region: LoadingBar
		horizontalStretchAreas: [ 9, 27 ]
		verticalStretchAreas: [ 4, 4 ]
		tiling: false
		minWidth: 37
		minHeight: 10
		rightWidth: 2
		leftWidth: 2
		bottomHeight: 2
		topHeight: 2
		offsetX: 0
		offsetY: 0
		offsetXspeed: 0
		offsetYspeed: 0
		frameDuration: 0.03
		regions: []
		playMode: 2
		crushMode: 0
	}
}
SliderStyle: {
	default-horizontal: {
		background: healthBack
		knob: healthFront
		knobBefore: healthFront
	}
	loadingBar: {
		background: HealthBarBg
		knob: LoadingBarKnob
		knobBefore: LoadingBarKnob
	}
	health: {
		background: healthBack
		knob: healthFront
		knobBefore: healthFront
	}
	default: {
		background: void
		knob: knobRock
		knobBefore: knobMeter
	}
}
}